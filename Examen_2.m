%% EXAMPLE: Differential drive vehicle following waypoints using the 
% Pure Pursuit algorithm
%
% Copyright 2018-2019 The MathWorks, Inc.

%% Define Vehicle
R = 0.1;                % Wheel radius [m]
L = 0.5;                % Wheelbase [m]
dd = DifferentialDrive(R,L);

%% Simulation parameters
sampleTime = 0.1;               % Sample time [s]
tVec = 0:sampleTime:300;         % Time array

initPose = [3.5;1.12;3/4*pi];             % Initial pose (x y theta)
pose = zeros(3,numel(tVec));    % Pose matrix
pose(:,1) = initPose;

% Define waypoints
                                 %                 %              %                           %                                             %                                   %                 %                         %b1  d1      k2        k4        k5        F1        k1       k3        j1        g1       n1       G2       g3       g4       m1       q1       p1       r1       r21      U1       T1       s1       s2                                                                                                                                                                                                                                                                        
waypoints = [3.53, 1.12; 3.33, 1.12; 3.13, 1.19;2.96, 1.32; 2.79, 1.44; 2.70, 1.59; 2.59, 1.72;2.42,1.8;2.2, 2.0; 2.2,2.3;1.9,2.4; 1.7,2.4; 1.6,2.8; 1.5, 3.0;1.4, 3.2;1.4,3.4;1.4,3.7;1.4,3.9;1.2,4.1;1.0,4.3;0.9,4.6;0.8,4.9;1.0,5.4;1.2,5.8;1.4,6.2; 1.6,6.5;1.8,6.6;2.1,6.8;2.3,7.0;2.7,7.2;3.2,7.3;3.6,7.4;4.0,7.4;4.2, 7.2;4.4,7.0;4.4,6.7;4.4,6.3;4.0,6.2;3.7,6.2;3.5,6.1;3.2,6.0;3.1,5.9;2.9,5.7;2.7,5.6;2.6,5.4;2.5,5.3;2.4,5.3;2.2,5.0;2.0,4.8;1.9,4.6;1.8,4.0;1.9,3.8;1.9,3.6;1.9,3.4;1.9,3.2;1.9,3.0;2.0,3.0;2.0,2.8;2.1,2.9;2.1,3.0;2.1,3.2;2.1,3.4;2.0,3.5;2.0,3.6;2.0,3.8;2.0,3.9;2.1,4.24;2.124,4.29;2.21,4.34;2.33,4.45;2.4,4.6;2.52, 4.63; 2.65, 4.72; 2.75, 4.73; 2.88, 4.73; 2.98, 4.68; 3.08, 4.71; 3.18, 4.7; 3.27, 4.7; 3.37, 4.7; 3.45, 4.7; 3.59, 4.69; 3.73, 4.47; 3.62, 4.49; 3.54, 4.5; 3.45, 4.5; 3.32, 4.5; 3.2, 4.51; 2.99, 4.54; 2.91, 4.54; 2.81, 4.55; 2.73, 4.55; 2.64, 4.54; 2.55, 4.52; 2.55, 4.43; 2.57, 4.3; 2.6, 4.2; 2.59, 4.11; 2.61, 4.042; 2.7, 3.89; 2.81, 3.87; 2.93, 3.84; 3.02, 3.84; 3.13, 3.85; 3.25, 3.86; 3.4, 3.9; 3.5, 3.94; 3.62, 4.03; 3.68, 4.18; 3.8, 4.2; 3.83, 4.09; 3.85, 4.02; 3.9, 3.94; 3.92, 3.86; 4, 3.6; 3.95, 3.76; 4.01, 3.5; 3.99, 3.43; 3.91, 3.38; 3.86, 3.31; 3.78, 3.25; 3.7, 3.2; 3.67, 3.11; 3.68, 2.89; 3.85, 2.84; 4.02, 2.83; 4.25, 2.87; 4.38, 2.86; 4.49, 2.86; 4.67, 2.84; 4.80, 2.94; 4.80, 3.06; 4.74, 3.19; 4.65, 3.29; 4.62, 3.41; 4.63, 3.55; 4.61, 3.72; 4.58, 3.83; 4.5, 4; 4.84, 3.90; 5, 3.88; 5.31, 3.93; 5.49, 4.06; 5.5, 4.5; 5.39, 4.54; 5.27, 4.55; 5.01, 4.56; 5.2, 4.6; 5.12, 4.58; 4.89, 4.53; 4.79, 4.48; 4.72, 4.42; 4.65, 4.35; 4.58, 4.274; 4.46, 4.53; 4.54, 4.65; 4.66, 4.72;4.9,4.7; 4.91, 4.81; 5, 4.8; 5.09, 4.80; 5.20, 4.83; 5.30, 4.84; 5.4, 4.8; 5.49, 4.75; 5.53, 4.70; 5.53, 4.63; 5.65, 4.62; 5.78, 4.65; 5.91, 4.78; 5.81, 4.90; 5.74, 5.02; 5.66, 5.22; 5.58, 5.39; 5.5, 5.5; 5.39, 5.65; 5.29, 5.75; 5.14, 5.84; 4.85, 6;4.64, 6.14; 4.70, 6.38; 4.71, 6.62; 4.71, 6.80; 4.73, 6.97; 4.87, 7.06; 5.00, 7.00; 5.17, 6.92; 5.27, 6.82; 5.39, 6.71; 5.50, 6.59; 5.70, 6.34; 5.87, 6.11;6.01, 5.90; 6.00, 5.78; 6.08, 5.66; 6.13, 5.48; 6.22, 5.08; 6.28, 4.83; 6.31, 4.66; 6.35, 4.52; 6.27, 4.41; 6.22, 4.27; 6.17, 4.07; 6.10, 3.94; 6.20, 3.82; 6.20, 3.67; 6.15, 3.54; 6.15, 3.41; 6.12, 3.28; 6.09, 3.15; 6.11, 2.92; 6.10, 2.77; 6.03, 2.65; 5.92, 2.57; 5.88, 2.39; 5.87, 2.22; 5.76, 2.00; 5.70, 1.80; 5.57, 1.65; 5.44, 1.51; 5.22, 1.34; 5.02, 1.16; 4.85, 1.05; 4.60, 0.95; 4.34, 0.95; 4.15, 0.92; 4.00, 1.00; 3.82, 1.06; 3.99, 1.29; 4.20, 1.57; 4.34, 1.82; 4.48, 1.95; 4.62, 2.03; 4.75, 2.08; 4.84, 2.13; 4.96, 2.17; 4.86, 2.29; 4.72, 2.36; 4.60, 2.40; 4.49, 2.35;4.38, 2.32; 4.22, 2.32; 4.04, 2.33; 3.91, 2.29; 3.75, 2.23; 3.61, 2.14; 3.72, 2.06; 3.89, 2.00; 4.03, 1.95; 4.15, 1.89; 4.25, 1.90]

% Create visualizer
viz = Visualizer2D;
viz.hasWaypoints = true;

%% Pure Pursuit Controller
controller = controllerPurePursuit;
controller.Waypoints = waypoints;
controller.LookaheadDistance = 0.05;
controller.DesiredLinearVelocity = 0.3;
controller.MaxAngularVelocity = 20;

%% Simulation loop
close all
r = rateControl(1/sampleTime);
for idx = 2:numel(tVec) 
    % Run the Pure Pursuit controller and convert output to wheel speeds
    [vRef,wRef] = controller(pose(:,idx-1));
    [wL,wR] = inverseKinematics(dd,vRef,wRef);
    
    % Compute the velocities
    [v,w] = forwardKinematics(dd,wL,wR);
    velB = [v;0;w]; % Body velocities [vx;vy;w]
    vel = bodyToWorld(velB,pose(:,idx-1));  % Convert from body to world
    
    % Perform forward discrete integration step
    pose(:,idx) = pose(:,idx-1) + vel*sampleTime; 
    
    % Update visualization
    viz(pose(:,idx),waypoints)
    waitfor(r);
end